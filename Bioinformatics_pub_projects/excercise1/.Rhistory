labs(title = "Treatment Group(As)", subtitle = "Average DE Count vs STDDEV by GO Class Gene") +
ylim(0, 1250) +
xlim(0, 215)
## combined single variable plots in one figure
fig1 <- ggarrange(pCT, pCTsd, pAs, pAssd)
fig1
## combined multi-variable plots in one figure
fig2 <- ggarrange(pCTvsSD, pAsvsSD, ncol = 1, nrow = 2)
fig2
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
## read in raw read count and DE analysis data frames and the GO class data sets for cellular senescence
SY_read_counts <- read_excel("SY_read_counts.xlsx")
SY_DE_As25_vs_Ctrl_Readcounts <- read_excel("SY_DE_As25_vs_Ctrl_Readcounts.xlsx")
GO_term_summary_pos_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_pos-reg.xlsx")
GO_term_summary_neg_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_neg-reg.xlsx")
GO_term_summary_onco_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_onco-induced.xlsx")
GO_term_summary_stress_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_stress-induced.xlsx")
## merge the GO cellular senescence subcategory data frames
GO_terms_merged <-
bind_rows(list(GO_term_summary_pos_reg,
GO_term_summary_neg_reg,
GO_term_summary_onco_induced,
GO_term_summary_stress_induced))
## for practice I selected essential variables to reduce df size and changed the
## 'external_gene_name variable' to 'Symbol' to match the GO_terms_merged variable
DE.mod1 <- SY_DE_As25_vs_Ctrl_Readcounts |>
rename(Symbol = external_gene_name) |>
select(c(3,4,7:19))
## mutate the DE df for mean and sd
DE.mod2 <- DE.mod1 |>
mutate(avg_As_count = (rowSums(DE.mod1[8:11])/4)) |>
mutate(avg_CT_count = (rowSums(DE.mod1[12:15])/4))
## filter selected genes from DE.modified$Symbol df using GO_term_summary_pos_reg$Symbol variable
## use the proper join() to only keep the relative GO genes
DE.GO_merged <-
inner_join(DE.mod2, GO_terms_merged, by = "Symbol") |>
select(c(1,8:17,19,22))
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCT <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_CT_count, fill = Symbol)) +
geom_col() +
labs(title = "Control Group(CT)", subtitle = "Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAs <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_As_count, fill = Symbol)) +
geom_col() +
labs(title = "Treatment Group(As)", subtitle = " Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCTsd <- ggplot(DE.GO_merged_complete,
aes(Symbol, CT.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Control Group(CT)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAssd <- ggplot(DE.GO_merged_complete,
aes(Symbol, As.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Treatment Group(As)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
pCTvsSD <- ggplot(DE.GO_merged_complete,
aes(CT.sd, avg_CT_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Control Group(CT)", subtitle = "Average DE Count vs STDDEV") +
ylim(0, 1250) +
xlim(0, 215)
pAsvsSD <- ggplot(DE.GO_merged_complete,
aes(As.sd, avg_As_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Treatment Group(As)", subtitle = "Average DE Count vs STDDEV by GO Class Gene") +
ylim(0, 1250) +
xlim(0, 215)
## combined single variable plots in one figure
fig1 <- ggarrange(pCT, pCTsd, pAs, pAssd)
fig1
## combined multi-variable plots in one figure
fig2 <- ggarrange(pCTvsSD, pAsvsSD, ncol = 1, nrow = 2)
fig2
pAsvsSD <- ggplot(DE.GO_merged_complete,
aes(As.sd, avg_As_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Treatment Group(As)", subtitle = "Average DE Count vs STDDEV by GO Class Gene") +
ylim(0, 1250) +
xlim(0, 215)
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
## read in raw read count and DE analysis data frames and the GO class data sets for cellular senescence
SY_read_counts <- read_excel("SY_read_counts.xlsx")
SY_DE_As25_vs_Ctrl_Readcounts <- read_excel("SY_DE_As25_vs_Ctrl_Readcounts.xlsx")
GO_term_summary_pos_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_pos-reg.xlsx")
GO_term_summary_neg_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_neg-reg.xlsx")
GO_term_summary_onco_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_onco-induced.xlsx")
GO_term_summary_stress_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_stress-induced.xlsx")
## merge the GO cellular senescence subcategory data frames
GO_terms_merged <-
bind_rows(list(GO_term_summary_pos_reg,
GO_term_summary_neg_reg,
GO_term_summary_onco_induced,
GO_term_summary_stress_induced))
## for practice I selected essential variables to reduce df size and changed the
## 'external_gene_name variable' to 'Symbol' to match the GO_terms_merged variable
DE.mod1 <- SY_DE_As25_vs_Ctrl_Readcounts |>
rename(Symbol = external_gene_name) |>
select(c(3,4,7:19))
## mutate the DE df for mean and sd
DE.mod2 <- DE.mod1 |>
mutate(avg_As_count = (rowSums(DE.mod1[8:11])/4)) |>
mutate(avg_CT_count = (rowSums(DE.mod1[12:15])/4))
## filter selected genes from DE.modified$Symbol df using GO_term_summary_pos_reg$Symbol variable
## use the proper join() to only keep the relative GO genes
DE.GO_merged <-
inner_join(DE.mod2, GO_terms_merged, by = "Symbol") |>
select(c(1,8:17,19,22))
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCT <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_CT_count, fill = Symbol)) +
geom_col() +
labs(title = "Control Group(CT)", subtitle = "Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAs <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_As_count, fill = Symbol)) +
geom_col() +
labs(title = "Treatment Group(As)", subtitle = " Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCTsd <- ggplot(DE.GO_merged_complete,
aes(Symbol, CT.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Control Group(CT)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAssd <- ggplot(DE.GO_merged_complete,
aes(Symbol, As.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Treatment Group(As)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
pCTvsSD <- ggplot(DE.GO_merged_complete,
aes(CT.sd, avg_CT_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Control Group(CT)", subtitle = "Average DE Count vs STDDEV") +
ylim(0, 1250) +
xlim(0, 215)
pAsvsSD <- ggplot(DE.GO_merged_complete,
aes(As.sd, avg_As_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Treatment Group(As)", subtitle = "Average DE Count vs STDDEV by GO Class Gene") +
ylim(0, 1250) +
xlim(0, 215)
## combined single variable plots in one figure
fig1 <- ggarrange(pCT, pCTsd, pAs, pAssd)
fig1
## combined multi-variable plots in one figure
fig2 <- ggarrange(pCTvsSD, pAsvsSD, ncol = 1, nrow = 2)
fig2
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
## read in raw read count and DE analysis data frames and the GO class data sets for cellular senescence
SY_read_counts <- read_excel("SY_read_counts.xlsx")
SY_DE_As25_vs_Ctrl_Readcounts <- read_excel("SY_DE_As25_vs_Ctrl_Readcounts.xlsx")
GO_term_summary_pos_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_pos-reg.xlsx")
GO_term_summary_neg_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_neg-reg.xlsx")
GO_term_summary_onco_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_onco-induced.xlsx")
GO_term_summary_stress_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_stress-induced.xlsx")
## merge the GO cellular senescence subcategory data frames
GO_terms_merged <-
bind_rows(list(GO_term_summary_pos_reg,
GO_term_summary_neg_reg,
GO_term_summary_onco_induced,
GO_term_summary_stress_induced))
## for practice I selected essential variables to reduce df size and changed the
## 'external_gene_name variable' to 'Symbol' to match the GO_terms_merged variable
DE.mod1 <- SY_DE_As25_vs_Ctrl_Readcounts |>
rename(Symbol = external_gene_name) |>
select(c(3,4,7:19))
## mutate the DE df for mean and sd
DE.mod2 <- DE.mod1 |>
mutate(avg_As_count = (rowSums(DE.mod1[8:11])/4)) |>
mutate(avg_CT_count = (rowSums(DE.mod1[12:15])/4))
## filter selected genes from DE.modified$Symbol df using GO_term_summary_pos_reg$Symbol variable
## use the proper join() to only keep the relative GO genes
DE.GO_merged <-
inner_join(DE.mod2, GO_terms_merged, by = "Symbol") |>
select(c(1,8:17,19,22))
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCT <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_CT_count, fill = Symbol)) +
geom_col() +
labs(title = "Control Group(CT)", subtitle = "Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAs <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_As_count, fill = Symbol)) +
geom_col() +
labs(title = "Treatment Group(As)", subtitle = " Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCTsd <- ggplot(DE.GO_merged_complete,
aes(Symbol, CT.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Control Group(CT)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAssd <- ggplot(DE.GO_merged_complete,
aes(Symbol, As.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Treatment Group(As)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
pCTvsSD <- ggplot(DE.GO_merged_complete,
aes(CT.sd, avg_CT_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Control Group(CT)", subtitle = "Average DE Count vs STDDEV") +
ylim(0, 1250) +
xlim(0, 215)
pAsvsSD <- ggplot(DE.GO_merged_complete,
aes(As.sd, avg_As_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Treatment Group(As)", subtitle = "Average DE Count vs STDDEV by GO Class Gene") +
ylim(0, 1250) +
xlim(0, 215)
## combined single variable plots in one figure
fig1 <- ggarrange(pCT, pCTsd, pAs, pAssd)
fig1
## combined multi-variable plots in one figure
fig2 <- ggarrange(pCTvsSD, pAsvsSD, ncol = 1, nrow = 2)
fig2
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
library(tinytex)
library(TeXCheckR)
install.packages("latexpdf")
library(latexpdf)
install.packages("rmarkdown")
fig2
View(DE.GO_merged_complete)
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
DE.GO_merged_complete
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
DE.GO_merged_complete
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
tibble(DE.GO_merged_complete)
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
tibble(DE.GO_merged_complete)
install.packages("gt")
library(gt)
install.packages("gtExtras")
library(gtExtras)
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
library(gt)
library(gtExtras)
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
DE.GO_merged_complete |>
gt()
gtgsa_tbl <- DE.GO_merged_complete |>
gt()
gtgsa_tbl
## use gt package for a quick nice looking table
DE.GO_merged_complete |>
gt()
View(gtgsa_tbl)
## use gt package for a quick nice looking table
DE.GO_merged_complete |>
gt()
rm(gtgsa_tbl)
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
library(gt)
library(gtExtras)
## read in raw read count and DE analysis data frames and the GO class data sets for cellular senescence
SY_read_counts <- read_excel("SY_read_counts.xlsx")
SY_DE_As25_vs_Ctrl_Readcounts <- read_excel("SY_DE_As25_vs_Ctrl_Readcounts.xlsx")
GO_term_summary_pos_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_pos-reg.xlsx")
GO_term_summary_neg_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_neg-reg.xlsx")
GO_term_summary_onco_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_onco-induced.xlsx")
GO_term_summary_stress_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_stress-induced.xlsx")
## merge the GO cellular senescence subcategory data frames
GO_terms_merged <-
bind_rows(list(GO_term_summary_pos_reg,
GO_term_summary_neg_reg,
GO_term_summary_onco_induced,
GO_term_summary_stress_induced))
## for practice I selected essential variables to reduce df size and changed the
## 'external_gene_name variable' to 'Symbol' to match the GO_terms_merged variable
DE.mod1 <- SY_DE_As25_vs_Ctrl_Readcounts |>
rename(Symbol = external_gene_name) |>
select(c(3,4,7:19))
## mutate the DE df for mean and sd
DE.mod2 <- DE.mod1 |>
mutate(avg_As_count = (rowSums(DE.mod1[8:11])/4)) |>
mutate(avg_CT_count = (rowSums(DE.mod1[12:15])/4))
## filter selected genes from DE.modified$Symbol df using GO_term_summary_pos_reg$Symbol variable
## use the proper join() to only keep the relative GO genes
DE.GO_merged <-
inner_join(DE.mod2, GO_terms_merged, by = "Symbol") |>
select(c(1,8:17,19,22))
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15) |>
gt()
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCT <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_CT_count, fill = Symbol)) +
geom_col() +
labs(title = "Control Group(CT)", subtitle = "Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
library(tidyverse)
library(rmarkdown)
library(readxl)
library(knitr)
library(ggpubr)
library(gt)
library(gtExtras)
## read in raw read count and DE analysis data frames and the GO class data sets for cellular senescence
SY_read_counts <- read_excel("SY_read_counts.xlsx")
SY_DE_As25_vs_Ctrl_Readcounts <- read_excel("SY_DE_As25_vs_Ctrl_Readcounts.xlsx")
GO_term_summary_pos_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_pos-reg.xlsx")
GO_term_summary_neg_reg <- read_excel("cellular_senescence_subcats/GO_term_summary_neg-reg.xlsx")
GO_term_summary_onco_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_onco-induced.xlsx")
GO_term_summary_stress_induced <- read_excel("cellular_senescence_subcats/GO_term_summary_stress-induced.xlsx")
## merge the GO cellular senescence subcategory data frames
GO_terms_merged <-
bind_rows(list(GO_term_summary_pos_reg,
GO_term_summary_neg_reg,
GO_term_summary_onco_induced,
GO_term_summary_stress_induced))
## for practice I selected essential variables to reduce df size and changed the
## 'external_gene_name variable' to 'Symbol' to match the GO_terms_merged variable
DE.mod1 <- SY_DE_As25_vs_Ctrl_Readcounts |>
rename(Symbol = external_gene_name) |>
select(c(3,4,7:19))
## mutate the DE df for mean and sd
DE.mod2 <- DE.mod1 |>
mutate(avg_As_count = (rowSums(DE.mod1[8:11])/4)) |>
mutate(avg_CT_count = (rowSums(DE.mod1[12:15])/4))
## filter selected genes from DE.modified$Symbol df using GO_term_summary_pos_reg$Symbol variable
## use the proper join() to only keep the relative GO genes
DE.GO_merged <-
inner_join(DE.mod2, GO_terms_merged, by = "Symbol") |>
select(c(1,8:17,19,22))
## sd output is calculated by row for both classes of samples As and CT
As.sd <- apply(DE.GO_merged[c(2:5)], 1, sd)
CT.sd <- apply(DE.GO_merged[c(6:9)], 1, sd)
## now cbind() the array as a column to the DE.GO_merged_complete df
DE.GO_merged_complete <- DE.GO_merged |>
cbind(As_sd = As.sd) |>
cbind(CT_sd = CT.sd) |>
select(1, 10:15)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCT <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_CT_count, fill = Symbol)) +
geom_col() +
labs(title = "Control Group(CT)", subtitle = "Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAs <- ggplot(DE.GO_merged_complete,
aes(Symbol, avg_As_count, fill = Symbol)) +
geom_col() +
labs(title = "Treatment Group(As)", subtitle = " Average DE Count Cellular Senescence") +
xlab("GO Class Genes") +
ylim(0, 1250)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pCTsd <- ggplot(DE.GO_merged_complete,
aes(Symbol, CT.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Control Group(CT)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
## Plot AVG read count and STDDEV for As and CT samples for selected set of genes
pAssd <- ggplot(DE.GO_merged_complete,
aes(Symbol, As.sd, fill = Symbol)) +
geom_col(alpha = 0.6) +
labs(title = "Treatment Group(As)", subtitle = "DE Count Standard Deviation") +
xlab("GO Class Genes") +
ylim(0, 300)
pCTvsSD <- ggplot(DE.GO_merged_complete,
aes(CT.sd, avg_CT_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Control Group(CT)", subtitle = "Average DE Count vs STDDEV") +
ylim(0, 1250) +
xlim(0, 215)
pAsvsSD <- ggplot(DE.GO_merged_complete,
aes(As.sd, avg_As_count)) +
geom_point(aes(color = Symbol), size = 5) +
scale_color_discrete(name = "GO Genes") +
labs(title = "Treatment Group(As)", subtitle = "Average DE Count vs STDDEV by GO Class Gene") +
ylim(0, 1250) +
xlim(0, 215)
## combined single variable plots in one figure
fig1 <- ggarrange(pCT, pCTsd, pAs, pAssd)
fig1
## combined multi-variable plots in one figure
fig2 <- ggarrange(pCTvsSD, pAsvsSD, ncol = 1, nrow = 2)
fig2
DE.GO_merged_complete |>
gt()
library(tinytex)
tinytex::reinstall_tinytex(repository = "illinois")
